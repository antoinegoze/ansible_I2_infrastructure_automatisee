
---
  - name: install tomcat
    apt: name={{item}} update_cache=yes state=latest
    with_items:
      - curl
      - default-jdk
      - ufw

  - name: create group tomcat
    group:
      name: tomcat
      state: present

  - name: Add the user tomcat
    user:
      name: tomcat
      group: tomcat
      shell: /bin/false
      home: /opt/tomcat

  - name: Creates /opt/tomcat directory
    file:
      path: /opt/tomcat
      state: directory

  - name: Download repositoryTomcat
    get_url:
      url: "{{repositoryTomcat}}"
      dest: /tmp

  - name: extract tomcat
    shell: tar -xzvf /tmp/apache-tomcat-9*tar.gz -C /opt/tomcat --strip-components=1

  - name: Change file ownership, group and permissions
    file:
      path: /opt/tomcat
      group: tomcat
      state: directory
      recurse: yes

  - name: Change file ownership, group and permissions of /opt/tomcat/conf
    file:
      path: /opt/tomcat/conf
      state: directory
      mode: g+r
      recurse: yes

  - name: Change file ownership, group and permissions of opt/tomcat/conf
    file:
      path: /opt/tomcat/conf
      mode: g+x
      state: directory

  - name: Change file ownership, group and permissions
    file:
      path: '{{item}}'
      state: directory
      owner: tomcat
      recurse: yes
    with_items:
      - /opt/tomcat/webapps/
      - /opt/tomcat/work/
      - /opt/tomcat/temp/
      - /opt/tomcat/logs/

  - name: Touch tomcat.service
    file:
      path: /etc/systemd/system/tomcat.service
      state: touch

  - name: conf
    blockinfile:
      dest: /etc/systemd/system/tomcat.service
      insertafter: BOF
      block: |
          [Unit]
          Description=Apache Tomcat Web Application Container
          After=network.target

          [Service]
          Type=forking

          Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
          Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
          Environment=CATALINA_HOME=/opt/tomcat
          Environment=CATALINA_BASE=/opt/tomcat
          Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
          Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'

          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh

          User=tomcat
          Group=tomcat
          UMask=0007
          RestartSec=10
          Restart=always

          [Install]
          WantedBy=multi-user.target

  - name: start tomcat
    shell: "{{item}}"
    with_items:
      - ufw allow 8080
      - systemctl daemon-reload
      - systemctl start tomcat
      - systemctl enable tomcat

  - name: Touch a iptables file
    file:
      path: /etc/network/if-pre-up.d/iptables
      state: touch

  - name: conf heartbeat
    blockinfile:
      dest: /etc/network/if-pre-up.d/iptables
      insertafter: AOF
      block: |
          #!/bin/bash

          iptables-restore < /etc/iptables.test.rules

          # supprime les règles déjà écrites
          iptables -F; iptables -X

          # on refuse toutes les connexions
          iptables -t filler-P INPUT DROP
          iptables -t filler-P FORWARD DROP
          iptables -t filler-P OUTPUT DROP

          # autorise loopback
          iptables -t filter -A INPUT -i icmp -j ACCEPT
          iptables -t filter -A OUTPUT -o icmp -j ACCEPT

          # autorise ping ICMP
          iptables -t filter -A INPUT -p icmp -j ACCEPT
          iptables -t filter -A OUTPUT -p icmp -j ACCEPT

          # ouverture du port SSH
          iptables -t filter -A INPUT -p TCP --dport 22 -j ACCEPT
          iptables -t filter -A OUTPUT -p TCP --sport 22 -j ACCEPT
          # autorise les échanges sur le port 8080 en entrée, uniquement pour l'ip ?? et sur l'interface enp0s8
          # on autorise uniquement le trafic venant des loadbalancers et de l'ip virtuelle des loadbalancers des mariaDB
          iptables -t filter -i enp0s3 --src {{ipLBTomcat1}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipLBTomcat2}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipVirtLBGTomcat}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipGaleraTomcat1}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipGaleraTomcat2}} -A INPUT -p TCP --dport 8080 -j ACCEPT

          # autorise les échanges sur les ports 8080 et 3306 en sortie
          iptables -t filter -A OUTPUT -p TCP --sport 8080 -j ACCEPT
          iptables -t filter -A OUTPUT -p TCP --sport 3306 -j ACCEPT

          # fermeture des autres ports
          iptables -t filter -A INPUT -j DROP
          iptables -t filter -A OUTPUT -j DROP
