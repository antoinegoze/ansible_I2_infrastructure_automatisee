---
  - name: install apache2
    apt: name={{item}} update_cache=yes state=latest
    with_items:
      - apache2
      - mysql-client
      - php7.0
      - libapache2-mod-php7.0
      - php7.0-pspell
      - php7.0-curl
      - php7.0-gd
      - php7.0-intl
      - php7.0-mysql
      - php7.0-xml
      - php7.0-xmlrpc
      - php7.0-ldap
      - php7.0-zip
      - php7.0-soap
      - php7.0-mbstring
      - libapache2-mod-security2

  - name: download moodle
    get_url:
      url: "{{repositoryMoodle}}"
      dest: /var/www/html

  - name: extract moodle
    unarchive:
      src: /var/www/html/{{archiveMoodle}}
      dest: /var/www/html
      remote_src: yes

  - name: chown www-data
    file:
      path: /var/www/html/moodle
      owner: www-data
      recurse: yes
      mode: 0777

  - name: chmod moodle data
    file:
      path: /var/www/html/moodledata
      state: directory
      owner: www-data
      recurse: yes
      mode: 0777

  - name: apache2 listen on port8080
    lineinfile:
      dest: /etc/apache2/ports.conf
      regexp: "Listen 80"
      state: absent

  - name: namevirtualhost
    blockinfile:
      dest: /etc/apache2/ports.conf
      insertbefore: BOF
      block: |
        NameVirtualHost {{ipMoodle}}:80
        Listen {{ipMoodle}}:80

  - name: copy conf file
    copy:
      src: /etc/apache2/sites-available/000-default.conf
      dest: /etc/apache2/sites-available/moodle.conf
      remote_src: yes

  - name: conf site moodle
    lineinfile:
      dest: /etc/apache2/sites-available/moodle.conf
      regexp: "<VirtualHost \\*:80>"
      state: absent

  - name: change root directory
    replace:
      dest: /etc/apache2/sites-available/moodle.conf
      regexp: 'DocumentRoot /var/www/html'
      replace: 'DocumentRoot /var/www/html/moodle'

  - name: conf site moodle 2
    lineinfile:
      dest: /etc/apache2/sites-available/moodle.conf
      insertbefore: BOF
      line: "<VirtualHost {{ipMoodle}}:80>"

  - name: a2ensite moodle
    command: a2ensite moodle.conf

  - name: a2dissite default
    command: a2dissite 000-default.conf

  - name: restart apache2
    service:
      name: apache2
      state: restarted

  - name: Touch a iptables file
    file:
      path: /etc/network/if-pre-up.d/iptables
      state: touch

  - name: conf heartbeat
    blockinfile:
      dest: /etc/network/if-pre-up.d/iptables
      insertafter: AOF
      block: |
          #!/bin/bash

          iptables-restore < /etc/iptables.test.rules

          # supprime les règles déjà écrites
          iptables -F; iptables -X

          # on refuse toutes les connexions
          iptables -t filler-P INPUT DROP
          iptables -t filler-P FORWARD DROP
          iptables -t filler-P OUTPUT DROP

          # autorise loopback
          iptables -t filter -A INPUT -i icmp -j ACCEPT
          iptables -t filter -A OUTPUT -o icmp -j ACCEPT

          # autorise ping ICMP
          iptables -t filter -A INPUT -p icmp -j ACCEPT
          iptables -t filter -A OUTPUT -p icmp -j ACCEPT

          # ouverture du port SSH
          iptables -t filter -A INPUT -p TCP --dport 22 -j ACCEPT
          iptables -t filter -A OUTPUT -p TCP --sport 22 -j ACCEPT
          # autorise les échanges sur le port 8080 en entrée, uniquement pour l'ip ?? et sur l'interface enp0s8
          # on autorise juste le traffic venant des loadbalancers et de l'ip virtuelle des loedbalancers mariaDB
          iptables -t filter -i enp0s3 --src {{ipLBMoodle1}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipLBMoodle2}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipVirtLBGMoodle}} -A INPUT -p TCP --dport 8080 -j ACCEPT
          iptables -t filter -i enp0s3 --src {{ipVirtLBGMoodle}} -A INPUT -p TCP --dport 3306 -j ACCEPT
          # autorise les échanges sur les ports 8080 et 3306 en sortie
          iptables -t filter -A OUTPUT -p TCP --sport 8080 -j ACCEPT
          iptables -t filter -A OUTPUT -p TCP --sport 3306 -j ACCEPT

          # fermeture des autres ports
          iptables -t filter -A INPUT -j DROP
          iptables -t filter -A OUTPUT -j DROP
